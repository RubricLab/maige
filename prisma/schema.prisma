datasource db {
  provider     = "postgres"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

model Customer {
  id                   String  @id @default(cuid())
  name                 String  @unique
  githubUserId         String? @unique
  stripeSubscriptionId String? @unique
  stripeCustomerId     String? @unique

  projects Project[]

  usage          Int      @default(0)
  totalUsage     Int      @default(0)
  usageLimit     Int      @default(20)
  usageUpdatedAt DateTime @default(now())

  usageWarned Boolean  @default(false)
  createdAt   DateTime @default(now())
}

model Project {
  id   String @id @default(cuid())
  name String

  customerId String
  customer   Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)

  usage Usage[]

  createdAt          DateTime      @default(now())
  customInstructions Instruction[]

  @@unique([customerId, name])
  @@index([customerId])
}

model Instruction {
  id                String  @id @default(cuid())
  projectId         String
  content           String  @db.Text
  creatorUsername   String?
  githubCommentLink String?

  createdAt DateTime @default(now())
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@index([projectId])
}

model Usage {
  id               String   @id @default(cuid())
  projectId        String
  project          Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  action           String
  agent            String
  promptTokens     Int
  completionTokens Int
  totalTokens      Int
  model            String
  createdAt        DateTime @default(now())

  @@index([projectId])
  @@fulltext([action])
  @@fulltext([agent])
  @@fulltext([action, agent])
}